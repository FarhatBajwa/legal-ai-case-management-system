<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Legal Cases</title>
    <link rel="stylesheet" href="/css/mycases.css">
</head>
<body>
    <div class="container">
        <h2>My Legal Cases</h2>
        <div id="message" class="message"></div>
        <div id="casesList"><p>Loading cases...</p></div>
        <a href="/dashboard" class="back-link">Back to Dashboard</a>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const casesListDiv = document.getElementById('casesList');
            const messageDiv = document.getElementById('message');

            const displayMessage = (msg, type) => {
                messageDiv.textContent = msg;
                messageDiv.className = `message ${type}`;
                messageDiv.style.display = 'block';
            };

            const fetchCases = async () => {
                try {
                    const res = await fetch('/api/cases/my-cases');
                    const cases = await res.json();

                    if (!res.ok) {
                        displayMessage(cases.message || 'Failed to load cases.', 'error');
                        return;
                    }
                    
                    casesListDiv.innerHTML = '';

                    if (cases.length === 0) {
                        casesListDiv.innerHTML = '<p>You have no cases uploaded yet. <a href="/upload-form">Upload one!</a></p>';
                    } else {
                        cases.forEach(caseItem => {
                            const caseDiv = document.createElement('div');
                            caseDiv.className = 'case-item';
                            
                            // **FIX:** Properly format party names for display
                            const party1 = caseItem.parties ? (caseItem.parties.party1 || 'N/A') : 'N/A';
                            const party2 = caseItem.parties ? (caseItem.parties.party2 || 'N/A') : 'N/A';
                            const partiesText = `${party1} vs. ${party2}`;
                            const sectionsText = caseItem.sections && caseItem.sections.length > 0 ? caseItem.sections.join(', ') : 'Not Found';

                            caseDiv.innerHTML = `
                                <div class="case-info">
                                    <h3>${caseItem.caseTitle || 'Untitled Case'}</h3>
                                    <p><strong>Type:</strong> ${caseItem.caseType || 'N/A'}</p>
                                    <p><strong>Status:</strong> ${caseItem.status || 'N/A'}</p>
                                    <p><strong>AI Outcome Prediction:</strong> ${caseItem.predictedOutcome || 'N/A'}</p>
                                    <p><strong>Parties:</strong> ${partiesText}</p>
                                    <p><strong>Key Sections Cited:</strong> ${sectionsText}</p>
                                    <p><strong>Case Strength Analysis:</strong> ${caseItem.winningPartyPrediction || 'N/A'}</p>
                                </div>
                                <div class="case-actions">
                                    <a href="/case-details/${caseItem._id}">View Details</a>
                                    <button data-id="${caseItem._id}" class="delete-button">Delete</button>
                                </div>
                            `;
                            casesListDiv.appendChild(caseDiv);
                        });

                        casesListDiv.querySelectorAll('.delete-button').forEach(button => {
                            button.addEventListener('click', async (e) => {
                                const caseId = e.target.dataset.id;
                                if (confirm('Are you sure you want to delete this case?')) {
                                    const deleteRes = await fetch(`/api/cases/${caseId}`, { method: 'DELETE' });
                                    const deleteData = await deleteRes.json();
                                    if (deleteRes.ok) fetchCases();
                                }
                            });
                        });
                    }
                } catch (err) {
                    displayMessage('Network or server error.', 'error');
                }
            };

            fetchCases();
        });
    </script>
</body>
</html>