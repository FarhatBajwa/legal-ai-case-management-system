<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <link rel="stylesheet" href="/css/profile.css"> </head>
<body>
    <div class="container">
        <h2>Your Profile</h2>
        <div id="message" class="message"></div>

        <div id="profileDisplay">
            <p>Loading profile...</p>
        </div>

        <h3>Update Profile</h3>
        <form id="profileUpdateForm">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>

            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>

            <p><strong>Role:</strong> <span id="userRole"></span></p>

            <button type="submit">Update Profile</button>
        </form>

        <a href="/dashboard" class="back-link">Back to Dashboard</a>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const messageDiv = document.getElementById('message');
            const profileDisplayDiv = document.getElementById('profileDisplay');
            const profileUpdateForm = document.getElementById('profileUpdateForm');
            const nameInput = document.getElementById('name');
            const emailInput = document.getElementById('email');
            const userRoleSpan = document.getElementById('userRole');

            const displayMessage = (msg, type) => {
                messageDiv.textContent = msg;
                messageDiv.className = `message ${type}`;
                messageDiv.style.display = 'block';
            };

            const fetchProfile = async () => {
                try {
                    const res = await fetch('/api/auth/profile', {
                        method: 'GET',
                        credentials: 'include'
                    });

                    if (res.status === 401) {
                        displayMessage('Session expired or unauthorized. Please log in again.', 'error');
                        setTimeout(() => {
                            window.location.href = '/login-form?message=Session expired, please log in.';
                        }, 2000);
                        return;
                    }

                    const userData = await res.json();

                    if (res.ok) {
                        profileDisplayDiv.innerHTML = `
                            <div class="profile-details">
                                <p><strong>Name:</strong> ${userData.name}</p>
                                <p><strong>Email:</strong> ${userData.email}</p>
                                <p><strong>Role:</strong> ${userData.role}</p>
                            </div>
                        `;
                        // Populate form fields for editing
                        nameInput.value = userData.name;
                        emailInput.value = userData.email;
                        userRoleSpan.textContent = userData.role;
                    } else {
                        displayMessage(userData.msg || 'Failed to load profile.', 'error');
                        profileDisplayDiv.innerHTML = '<p>Error loading profile.</p>';
                    }
                } catch (err) {
                    console.error('Error fetching profile:', err);
                    displayMessage('Network or server error fetching profile.', 'error');
                    profileDisplayDiv.innerHTML = '<p>Error loading profile.</p>';
                }
            };

            const updateProfile = async (name, email) => {
                try {
                    const res = await fetch('/api/auth/profile', {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ name, email }),
                        credentials: 'include'
                    });
                    const data = await res.json();
                    if (res.ok) {
                        displayMessage(data.msg, 'success');
                        fetchProfile(); // Re-fetch to display updated data
                    } else {
                        displayMessage(data.msg || 'Failed to update profile.', 'error');
                    }
                } catch (err) {
                    console.error('Error updating profile:', err);
                    displayMessage('Network error updating profile.', 'error');
                }
            };

            profileUpdateForm.addEventListener('submit', function(e) {
                e.preventDefault();
                const name = nameInput.value;
                const email = emailInput.value;
                updateProfile(name, email);
            });

            fetchProfile(); // Load profile data on page load
        });
    </script>
</body>
</html>